--
-- PostgreSQL database dump
--

-- Dumped from database version 17.5
-- Dumped by pg_dump version 17.4 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: master_table; Type: TABLE; Schema: public; Owner: miphi
--

CREATE TABLE public.master_table (
    s_no integer NOT NULL,
    test_scenario_id character varying(100),
    test_scenario text,
    testcase_id character varying(100),
    testcase_description text,
    prerequisite text,
    steps_to_reproduce text,
    expected_result text,
    actual_result text,
    test_result text DEFAULT 'not-tested'::text,
    status text DEFAULT 'new'::text,
    comments text,
    test_suite character varying(100)
);
CREATE OR REPLACE FUNCTION public.generate_testcase_id(test_suite text)
RETURNS text AS $$
DECLARE
    prefix text;
    new_id text;
    seq int;
BEGIN
    -- Determine prefix based on test_suite
    IF test_suite = 'Logs' THEN
        prefix := 'TS_Logs_';
    ELSIF test_suite = 'Inference' THEN
        prefix := 'TS_Inference_';
    ELSIF test_suite = 'Model' THEN
        prefix := 'TS_Models_';
    ELSIF test_suite = 'Users' THEN
        prefix := 'TS_Users_';
    ELSE
        RAISE EXCEPTION 'Unknown test_suite: %', test_suite;
    END IF;

    -- Count entries with same test_suite
    SELECT COUNT(*) + 1 INTO seq FROM master_table WHERE test_suite = test_suite;

    new_id := prefix || LPAD(seq::text, 3, '0');
    RETURN new_id;
END;
$$ LANGUAGE plpgsql;



ALTER TABLE public.master_table OWNER TO miphi;

--
-- Name: master_table_s_no_seq1; Type: SEQUENCE; Schema: public; Owner: miphi
--

CREATE SEQUENCE public.master_table_s_no_seq1
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.master_table_s_no_seq1 OWNER TO miphi;

--
-- Name: master_table_s_no_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: miphi
--

ALTER SEQUENCE public.master_table_s_no_seq1 OWNED BY public.master_table.s_no;


--
-- Name: master_table s_no; Type: DEFAULT; Schema: public; Owner: miphi
--

ALTER TABLE ONLY public.master_table ALTER COLUMN s_no SET DEFAULT nextval('public.master_table_s_no_seq1'::regclass);


--
-- Data for Name: master_table; Type: TABLE DATA; Schema: public; Owner: miphi
--

COPY public.master_table (s_no, test_scenario_id, test_scenario, testcase_id, testcase_description, prerequisite, steps_to_reproduce, expected_result, actual_result, test_result, status, comments, test_suite) FROM stdin;
1	TS_Users_001	\N	TC_1	Super Admin creates a container and adds Admin and Write users. Make sure both users have the correct roles and can access the container based on their permissions.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
2	TS_Users_002	\N	TC_2	Super Admin sets up a container with Admin and Read users. Make sure Admin can manage the container fully, and Read user can only view it. 	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
3	TS_Users_003	\N	TC_3	Super Admin creates a container with only an Admin user. Ensure the container works with one user, and that Read/Write users can be added later. Verify Admin has full access.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
4	TS_Users_004	\N	TC_4	Super Admin creates a container with only a Write user. Ensure the container works with a non-admin user. Verify Write user can fine-tune but not add users. Check if Super Admin can add an Admin later.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
5	TS_Users_005	\N	TC_5	Super Admin creates a container with only a Read user. Ensure the Read user can log in with limited access. Verify fine-tuning is blocked. Check that Super Admin can add an Admin later.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
6	TS_Users_006	\N	TC_6	Super Admin creates a container with an Admin, then adds a Write user. Ensure the Write user has the right permissions, can fine-tune but not manage users.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
7	TS_Users_007	\N	TC_7	Super Admin adds a Read user to a container with an Admin. Verify the Read user has view-only access,can log in but not fine-tune or change settings. 	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
8	TS_Users_008	\N	TC_8	Super Admin adds an Admin to a container that had no Admin before. Ensure the new Admin has full management access and can perform all admin tasks.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
9	TS_Users_009	\N	TC_9	Super Admin tries to add a second Admin to a container. Confirm the system blocks this with an error.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
10	TS_Users_010	\N	TC_10	Super Admin tries to add a third user to a container that already has Admin and Read/Write users. Verify the system blocks this with a clear message about user limits.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
11	TS_Users_011	\N	TC_11	Super Admin removes an Admin user from a container. Confirm the Admin is deleted with a success message and cannot log in. Ensure a new Admin can be added after removal.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
12	TS_Users_012	\N	TC_12	Super Admin deletes a Read user from a container. Confirm the user is blocked from logging in. Ensure a new Read/Write user can be added afterward.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
13	TS_Users_013	\N	TC_13	Super Admin removes a Write user from a container. Ensure active Write user sessions terminate correctly. Verify the ability to add a replacement user.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
14	TS_Users_014	\N	TC_14	Super Admin updates an Admin's username, email, and password. Verify the changes are applied successfully. Confirm the Admin can log in with the new credentials, not the old ones.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
15	TS_Users_015	\N	TC_15	Super Admin updates multiple credentials for a Read user. Ensure the Read user can log in with the new credentials only. Verify the role and view-only permissions stay intact.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
16	TS_Users_016	\N	TC_16	Super Admin updates a Write user’s username, email, and password. Confirm the Write user can log in only with the new credentials. Verify their fine-tuning permissions remain unchanged.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
17	TS_Users_017	\N	TC_17	Super Admin deletes a container with active users. Confirm all users lose access and NVMe resources are released properly.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
18	TS_Users_018	\N	TC_18	Super Admin accesses multiple containers. Ensure they can reach every container regardless of account status. Confirm Super Admin has full permissions and can perform all operations across containers.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
19	TS_Users_019	\N	TC_19	Super Admin attempts to create a user with a duplicate username. Ensure the system detects the duplication and prevents creation with a clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
20	TS_Users_020	\N	TC_20	Super Admin attempts to create a user with various invalid email formats. Ensure the system correctly validates the email and rejects invalid entries with clear error messages.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
21	TS_Users_021	\N	TC_21	Super Admin attempts to create a user with a password that violates strength policies. Ensure the system enforces password requirements, rejects weak passwords, and displays helpful guidance in the error messages.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
22	TS_Users_022	\N	TC_22	Super Admin enters different strings in the password and confirm fields. Ensure the system detects the mismatch and prevents account creation with a clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
23	TS_Users_023	\N	TC_23	Container Admin creates a Write user with full details. Ensure successful creation with correct permissions. Confirm the new Write user can log in and perform fine-tuning operations.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
24	TS_Users_024	\N	TC_24	Container Admin creates a Read user. Verify the user is created with view-only permissions. Ensure the Read user can access logs but cannot fine-tune or modify settings.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
25	TS_Users_025	\N	TC_25	Container Admin tries to add a second Admin. Ensure the system blocks this with a clear error message and keeps only one Admin per container.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
26	TS_Users_026	\N	TC_26	Container Admin updates their username, email, and password. Ensure the changes are saved with proper validation, they can log in only with the new credentials, and their admin role and access remain unchanged	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
27	TS_Users_027	\N	TC_27	Container Admin updates a Write user’s username, email, and password. Confirm the Write user can log in only with the new credentials and retains their fine-tuning permissions.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
28	TS_Users_028	\N	TC_28	Container Admin updates a Read user’s username, email, and password. Ensure the Read user can log in only with the new credentials, and their view-only permissions remain unchanged.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
29	TS_Users_029	\N	TC_29	Container Admin deletes a Write user. Ensure the user is removed and cannot access the container, and a replacement user can be created.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
30	TS_Users_030	\N	TC_30	Container Admin deletes a Read user. Ensure the Read user can no longer log in, container operations continue unaffected, and a replacement user can be added.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
31	TS_Users_031	\N	TC_31	Container Admin attempts to delete their own account. Ensure the system prompts confirmation and warning. Verify container access and management behavior after the Admin is removed.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
32	TS_Users_032	\N	TC_32	Container Admin logs into the container. Ensure they authenticate successfully and can access user management, fine-tuning, and all admin functions.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
33	TS_Users_033	\N	TC_33	Admin tries to access a different container. Ensure the system blocks cross-container access with an error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
34	TS_Users_034	\N	TC_34	Admin attempts to create a user with an existing username. Ensure the system detects duplicates globally across containers, blocks creation with a clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
35	TS_Users_035	\N	TC_35	Admin attempts to create a user with invalid email formats. Ensure email validation applies the same standards as Super Admin, with clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
36	TS_Users_036	\N	TC_36	Write user logs in and attempts fine-tuning operations. Test model selection, dataset configuration, and training initiation.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
37	TS_Users_037	\N	TC_37	Write user attempts to modify their own username, email, and password. Verify system allows self-credential updates with proper validation. Confirm Write user can login with new credentials only.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
38	TS_Users_038	\N	TC_38	Write user tries to modify credentials of Admin user. Verify system blocks this unauthorized action with appropriate error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
39	TS_Users_039	\N	TC_39	Write user tries to create another user in the container. Verify system prevents this action with clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
40	TS_Users_040	\N	TC_40	Write user attempts to access a different container through URL. Verify system enforces strict container isolation with appropriate error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
41	TS_Users_041	\N	TC_41	Read user logs into their container. Verify successful access to GUI with all view-only elements. Check that interface shows appropriate read-only controls.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
42	TS_Users_042	\N	TC_42	Read user tries to modify their own account details. Verify system blocks credential self-management for Read users. 	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
43	TS_Users_043	\N	TC_43	Read user tries to access user management to create new users. Verify system prevents access to user creation functions. Check appropriate error messages.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
44	TS_Users_044	\N	TC_44	Read user attempts to access a different container. Verify system enforces container isolation with clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
45	TS_Users_045	\N	TC_45	Delete users under different conditions (logged in, performing operations). Verify system properly terminates sessions and revokes access.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
46	TS_Users_046	\N	TC_46	Attempt to login to same account from multiple locations/browsers. Verify system behavior for concurrent sessions (allow/block/notify). Check for session tracking and appropriate handling of simultaneous operations.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
47	TS_Users_047	\N	TC_47	Container Admin attempts to change a Read user to Write user. Verify if this operation is permitted with appropriate system response. Check affected user permissions after attempt. Test with different role combinations to ensure consistent behavior.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
48	TS_Users_048	\N	TC_48	Create new users with valid email addresses. Verify system sends appropriate welcome/setup emails. Check email content includes necessary information without sensitive data. Test email delivery to various domains.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
49	TS_Users_049	\N	TC_49	Change credentials for various user types. Verify appropriate notification emails are sent for security-sensitive changes. Check emails contain sufficient information without exposing sensitive data. Test notification delivery timing.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
50	TS_Models_001	\N	TC_50	Verify that the default model path is correctly displayed in the GUI, ensure that the path exists within the GUI container on the host system, and confirm that all available models within that path are listed correctly in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. /media/models/ path exists inside the container  with at least one model.\n\n4. SSH access to the host system is available.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Check if the default path /media/models/ is shown.\n\n5. Verify if models are listed under this path in the GUI.\n\n6. SSH into the host system.\n\n7. Run the following to check inside the container:\ndocker exec -it <container_name> ls /media/models/\n\n8. Confirm the models listed in the GUI match those in the container.	1. Able to open the GUI in the browser.\n\n2. Successfully logged into the GUI.\n\n3. Navigated to the Models page without issues.\n\n4. Default model path /media/models/ is displayed correctly.\n\n5. Available models under /media/models/ are listed in the GUI.\n\n6. SSH connection to the host system is successful.\n\n7. Container lists contents of /media/models/ without errors.\n\n8. Models listed in the GUI match the contents of /media/models/ inside the container.	\N	PASS	COMPLETED	\N	Models
51	TS_Models_002	\N	TC_51	Verify that when a valid custom model path is provided, the GUI correctly accesses the specified directory and lists all available models present in that path.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to host system.\n\n4. A valid custom model path exists in the container (e.g., /custom_models/) and contains model directories.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter a valid custom model path (e.g., /custom_models/) in the input field.\n\n5. Click the Search button.\n\n6. Verify that available models are listed correctly in the GUI.\n\n7. SSH into the host system.\n\n8. Run the following to verify model directories:\ndocker exec -it <container_name> ls /custom_models/\n\n9. Cross-check if the listed models in the GUI match with the container’s directory contents.	1. GUI opens successfully in the browser.\n\n2. Login is successful using valid credentials.\n\n3. Navigated to the Models page without any issues.\n\n4. Able to enter the valid custom model path /custom_models/ in the input field.\n\n5. Search button works and triggers model lookup.\n\n6. Models present in /custom_models/ are displayed correctly in the GUI.\n\n7. SSH connection to the host system is established successfully.\n\n8. Command executes successfully and lists contents of /custom_models/ inside the container.\n\n9. Models listed in the GUI match exactly with the directories listed inside the container.	\N	PASS	COMPLETED	\N	Models
93	TS_Inference_020	Validating Text-to-Text task type	TC_93	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in message field\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input	\N	NOT-TESTED	NEW	\N	Inference
52	TS_Models_003	\N	TC_52	Verify that when no model path is provided (i.e., the path field is empty or removed), the GUI does not display any models and handles the absence of a model path gracefully without errors	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Clear the model path input field (ensure it’s empty).\n\n5. Click the Search button.\n\n6. Verify that no models are displayed in the list.	1. GUI loads successfully in the browser.\n\n2. User logs in without any authentication issues.\n\n3. Models Page opens and is fully functional.\n\n4. Model path input field is cleared successfully and remains empty.\n\n5. Search button responds without any crash or freeze.\n\n6. No models are displayed; GUI shows a message like "No path provided" or "No models found" without any errors or unexpected behavior.	\N	PASS	COMPLETED	\N	Models
53	TS_Models_004	\N	TC_53	 Verify navigation to the Fine-tuning page under different model path conditions\na. Without providing any model path\nb. With an invalid model path (non-existent on the host system)\nc. With a valid model path where no models are available	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to host system.\n\n4. A valid custom model path (e.g., /media/models/) exists in the container without  any model directories.\n\n5. An invalid model path (e.g., /random/path) 	Open the GUI in a browser.\nLogin using valid credentials.\nNavigate to the Models Page.\n\na. Without providing any model path\nEnsure the model path input is empty.\nClick the Search button.\nClick on the Fine-tuning tab/page.\nVerify that you are not redirected to the Fine-tuning page\n\nb. With an invalid model path\nEnter an invalid path (e.g., /invalid/path) in the model path input field.\nClick the Search button.\nObserve that no models are listed and throws error.\nClick on the Fine-tuning tab/page.\nVerify that you are not redirected to the Fine-tuning page.\n\nc. With a valid model path\nEnter a valid model path (e.g., /media/models/).\nClick the Search button.\nConfirm that no models are listed.\nClick on the Fine-tuning tab/page.\nVerify that you are not redirected to the Fine-tuning page.	GUI loads successfully in the browser.\nUser logs in without any issues.\nModels page opens properly.\n\nInput field is empty.\nNo models are listed after clicking Search.\nUser is not redirected to the Fine-tuning page.\n\nInvalid model path is accepted by input.\nNo models are displayed.\nAn appropriate error or warning is shown.\nUser is not redirected to the Fine-tuning page.\n\nValid model path is accepted by input.\nNo models are listed (if directory is empty).\nGUI handles it without error.\nUser is not redirected to the Fine-tuning page.	\N	PASS	COMPLETED	\N	Models
54	TS_Models_005	\N	TC_54	Verify that an invalid or non-existent model path results in no models listed and a clear error or warning in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to host system (needed to confirm invalid path).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter an invalid or non-existent model path (e.g., /invalid_model_path) in the input field.\n\n5. Click the Search button.\n\n6. Verify that no models are listed in the GUI.\n\n7. Confirm that a clear error or warning message is shown indicating the path is invalid or unavailable.\n\n8. SSH into the host system and verify the directory does not exist:\ndocker exec -it <container_name> ls /invalid_model_path  	1. GUI opens successfully in the browser.\n\n2. User logs in without any errors.\n\n3. Models page is displayed correctly.\n\n4. Invalid path is entered into the input field.\n\n5. Search button is clickable and triggers the check.\n\n6. No models are listed in the GUI.\n\n7. A clear error or warning message appears, indicating the path is invalid or unavailable.\n\n8. Command confirms that /invalid_model_path does not exist inside the container.	\N	PASS	COMPLETED	\N	Models
55	TS_Models_006	\N	TC_55	Verify that the custom model path remains persistent after refreshing the models page.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A valid custom model path exists in the container (e.g., /custom_models/) with model directories.\n\n4. SSH access to host system (optional, to verify directory contents).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter a valid custom model path (e.g., /custom_models/) in the input field.\n\n5. Click the Search button.\n\n6. Confirm models from the custom path are listed.\n\n7. Refresh the page (F5 or browser reload).\n\n8. Verify that the custom model path is still present in the input field.\n\n9. Ensure that the models are re-listed without needing to re-enter the path.	1. GUI is accessible and loads successfully in the browser.\n\n2. User is authenticated and logged in successfully.\n\n3. Models Page is displayed without any issues.\n\n4.Custom model path is entered successfully.\n\n5. Search action is triggered without any error.\n\n6. Models present under /custom_models/ are listed accurately in the GUI.\n\n7. Page refresh completes successfully.\n\n8. The custom model path remains unchanged in the input field after the refresh.\n\n9. Models from the custom path are re-displayed without needing to re-enter the path.	\N	PASS	COMPLETED	\N	Models
56	TS_Models_007	\N	TC_56	Verify that the GUI lists only valid model directories, ignoring unrelated folders in the given model path.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A valid model path (e.g., /media/models/) exists with:\nSome valid model directories.\nSome unrelated/non-model folders (e.g., text files, logs, temp folders).\n\n4. SSH access to host system to verify contents.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Check if the default path /media/models/ is shown.\n\n5. Verify that only valid model directories are listed in the GUI.\n\n6. SSH into the host system.\n\n7. Run:\ndocker exec -it <container_name> ls /media/models/\n\n8. Cross-check the GUI list excludes unrelated folders or files.	GUI loads successfully in the browser.\n\nLogin is successful with valid credentials.\n\nModels Page is displayed correctly.\n\nDefault model path /media/models/ is pre-filled or visible in the input field.\n\nOnly valid model directories (e.g., containing expected structure/files) are shown in the GUI.\n\nSSH connection to the host system is successful.\n\nCommand runs without errors and lists contents of /media/models/ inside the container.\n\nGUI displays only valid models; unrelated files/folders (e.g., .txt, .log, temp files) are not shown.	\N	PASS	COMPLETED	\N	Models
94	TS_Inference_021	Validating Text-to-Text task type	TC_94	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input to the text box, the input should be passed to the model	\N	NOT-TESTED	NEW	\N	Inference
57	TS_Models_008	\N	TC_57	Verify that clicking the eye icon opens a model preview and displays all relevant details accurately	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. At least one model is available in the default or custom path (e.g., /media/models/).\n\n4. SSH access to host system (for validation).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure a model is listed in the models list.\n\n5. Click on the eye icon corresponding to a listed model.\n\n6. Verify a preview pop-up opens showing model details (e.g., model name, path, size, etc.,).\n\n7. SSH into the host system and run:\ndocker exec -it <container_name> ls -lh /media/models/<model_name>/\nto validate file size and structure match the preview details.	GUI opens successfully in the browser.\n\nUser logs in successfully with valid credentials.\n\nModels Page loads without issues.\n\nAt least one model is visible in the models list.\n\nClicking the eye icon triggers a model preview popup.\n\nThe popup displays correct model details, including name, path, and size.\n\nSSH access and command execution are successful; file size and structure match the preview details shown in the GUI.	\N	PASS	COMPLETED	\N	Models
58	TS_Models_009	\N	TC_58	Verify that deleting a model from the GUI removes it from the list and confirms deletion on the host system.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. At least one model is available in the default or custom path (e.g., /media/models/).\n\n4. SSH access to host system.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Identify a model listed under the model path.\n\n5. Click the delete icon for that model.\n\n6. Confirm the deletion in the prompt.\n\n10. Verify that the model is removed from the list in the GUI.\n\n11. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/\n\n12. Ensure that the deleted model directory no longer exists.	GUI opens successfully in the browser.\n\nUser logs in successfully with valid credentials.\n\nModels Page loads correctly.\n\nAt least one model is listed under the specified model path.\n\nClicking the delete icon initiates a deletion prompt.\n\nUpon confirmation, the deletion process begins.\n\nThe model is removed from the list in the GUI.\n\nSSH access to the host system is successful.\n\nRunning the ls command confirms that the deleted model directory no longer exists in the specified path.	\N	PASS	COMPLETED	\N	Models
59	TS_Models_010	\N	TC_59	Verify that the search correctly filters available models and shows no results for non-existent ones.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model path is provided in the GUI with some models available in it (e.g., /media/models/).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure the model path is set to a valid directory where models exist.\n\n5. In the Search field, enter a valid model name or partial name of an existing model.\n\n6. Verify that the correct models matching the search criteria are listed in the GUI.\n\n7. In the Search field, enter a non-existent model name or invalid search term.\n\n8. Verify that no models are listed and the GUI shows a message like "No models found."\n\n9. SSH into the host system and confirm that the non-existent model does not exist in the model path.\ndocker exec -it <container_name> ls /media/models/	GUI opens successfully in the browser.\n\nLogin completes successfully with valid credentials.\n\nModels Page loads without issues.\n\nValid model path is recognized and models are listed.\n\nEntering a valid model name or partial name filters the list accordingly.\n\nOnly models matching the search criteria are displayed.\n\nEntering a non-existent or invalid model name clears the list.\n\nGUI displays a message like “No models found.”\n\nSSH command confirms that the non-existent model is not present in the specified directory.	\N	PASS	COMPLETED	\N	Models
60	TS_Models_011	\N	TC_60	Verify that the search is disabled when no models are available, either due to an empty or invalid model path.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. The model path is empty, or\nThe model path is invalid (does not exist or points to a non-existent directory).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure that the model path field is empty or points to an invalid directory (e.g., /nonexistent/path/).\n\n5. Verify that the Search button is disabled or unclickable.\n\n6. If the model path is empty, verify that no models are displayed in the list.\n\n7. If the model path is invalid, verify that no models are listed, and the search functionality remains disabled.\n\n8. SSH into the host system to confirm that the model path is indeed empty or points to an invalid location.\ndocker exec -it <container_name> ls /path/to/models/\n\n9. Verify that no models exist in the model path.	GUI opens successfully in the browser.\n\nLogin completes successfully using valid credentials.\n\nModels Page loads correctly.\n\nThe model path field is empty or contains an invalid path (e.g., /nonexistent/path/).\n\nThe Search button is disabled or unclickable.\n\nIf the path is empty, no models are shown in the list.\n\nIf the path is invalid, no models are listed, and the search remains disabled or results in an error message.\n\nSSH confirms that the provided path does not exist on the host.\n\nNo model directories or files are found in the specified invalid path.	\N	PASS	COMPLETED	\N	Models
61	TS_Models_012	\N	TC_61	Verify that uploading a model ZIP file completes successfully and the extracted model appears both in the GUI and on the host system.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model ZIP file is available for upload.\n\n5. The models path in the GUI is set to a valid directory where the model will be uploaded.\n\n6. Ensure there is enough disk space to upload the model.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select a valid model ZIP file from your system.\n\n6. Wait for the upload process to complete.\n\n7. Verify that the upload completes successfully, and the progress bar shows 100%.\n\n8. Once the upload is complete, ensure the model appears in the Models List on the GUI.\n\n9. SSH into the host system and navigate to the model path directory.\ndocker exec -it <container_name> ls /path/to/models/\n\n10. Verify that the model folder extracted from the ZIP file exists in the directory on the host system.	GUI loads successfully in the browser.\n\nLogin completes successfully with valid credentials.\n\nModels Page is displayed without errors.\n\nUpload Model dialog opens upon clicking the Upload button.\n\nA valid model ZIP file is successfully selected from the local system.\n\nUpload process begins and progresses without interruption.\n\nUpload completes successfully, and the progress bar reaches 100%.\n\nThe newly uploaded model appears in the Models List in the GUI.\n\nSSH into the host confirms access to the container and model path.\n\nThe extracted model folder exists under the model path in the host system.	\N	FAIL	NEEDS-RETEST	\N	Models
62	\N	\N	TC_62	Verify the behavior of the GUI when navigating between pages or refreshing the browser tab while a file upload is in progress.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model ZIP file is available for upload.\n\n5. The models path in the GUI is set to a valid directory where the model will be uploaded.\n\n6. Ensure there is enough disk space to upload the model.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select a valid model ZIP file to upload.\n\n6. As the upload progresses (before it completes), do one of the following:\nNavigate to a different page (e.g., Datasets Page or Monitor Page).\nOr refresh the browser tab.\n\n7. Observe the behavior of the GUI and the ongoing upload.\n\n8. Check if the upload resumes, restarts.	GUI opens and login is successful.\n\nModels Page loads correctly.\n\nModel ZIP file is accepted and upload starts.\n\nDuring navigation to another page or refreshing the tab:\nGUI should handle the interruption gracefully without crashing.\nUpload should either resume automatically or restart cleanly if needed.	\N	FAIL	NEEDS-RETEST	\N	Models
63	TS_Models_013	\N	TC_63	Verify that uploading a non-model ZIP file triggers an appropriate error message in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A non-model ZIP file (e.g., a .txt.zip, .json.zip, or any other file type not a model) is available for upload.\n\n5. The models path in the GUI is set to a valid directory where the model is supposed to be uploaded.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select a non-model ZIP file (e.g., .txt.zip, .json.zip, etc.) from your system.\n\n6. Click the Upload button to initiate the upload.\n\n7. Wait for the upload process to complete.\n\n8. Ensure that the GUI displays an appropriate error message indicating that the file is not a valid model ZIP file.\n\n9. Verify that no model is listed in the models page after the upload attempt.\n\n10. SSH into the host system and check the model path directory.\ndocker exec -it <container_name> ls /path/to/models/\n\n11. Confirm that the non-model ZIP file was not extracted or saved in the models directory.	GUI loads successfully in the browser.\n\nLogin completes successfully using valid credentials.\n\nModels Page is displayed without any errors.\n\nUpload Model dialog opens correctly.\n\nA non-model ZIP file is selected from the local system.\n\nUpload is attempted by clicking the Upload button.\n\nUpload process completes or halts with error handling.\n\nGUI displays an error message indicating the file is not a valid model ZIP file.\n\nNo new model appears in the models list after the failed upload.\n\nSSH access to the host system and the container is successful.\n\nThe non-model ZIP file is not present or extracted in the model path directory.	\N	PASS	COMPLETED	\N	Models
64	TS_Models_014	\N	TC_64	Verify that uploading a corrupted or improperly structured ZIP file (e.g., model.txt.zip) is handled gracefully with an appropriate error message in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A corrupted or improperly structured ZIP file (e.g., model.txt.zip or any other file with incorrect contents) is available for upload.\n\n5. The models path in the GUI is set to a valid directory where models are supposed to be uploaded.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select the corrupted or improperly structured ZIP file (e.g., model.txt.zip).\n\n6. Click the Upload button to initiate the upload.\n\n7. Ensure that the GUI displays an appropriate error message indicating that the ZIP file is corrupted or improperly structured.\n\n8. Verify that the model does not appear in the models list after the upload attempt.\n\n9. SSH into the host system and check the model path directory.\ndocker exec -it <container_name> ls /path/to/models/\n\n10. Confirm that the corrupted ZIP file was not extracted or saved in the models directory.	GUI opens successfully in the browser.\n\nLogin is successful with valid credentials.\n\nModels Page is displayed correctly.\n\nUpload Model dialog opens without issues.\n\nA corrupted or improperly structured ZIP file is selected.\n\nUpload is initiated by clicking the Upload button.\n\nGUI shows a clear and appropriate error message indicating the ZIP file is corrupted or not structured properly.\n\nThe corrupted model does not appear in the models list on the GUI.\n\nSSH into the host system and list command runs successfully.\n\nThe corrupted ZIP file is not found or extracted in the models directory.	\N	FAIL	NEEDS-RETEST	\N	Models
65	TS_Models_015	\N	TC_65	Verify that uploading a model with the same name prompts for replacement and overwrites the existing model if confirmed.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model ZIP file (e.g., test_model.zip) is available.\n\n5. The model with the same name (test_model) already exists in the current models path (e.g., /media/models/).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure the models path is set to /media/models/.\n\n5. Confirm that test_model is already listed.\n\n6. Click the Upload Model button.\n\n7. Select the same model ZIP file (test_model.zip).\n\n8. Click the Upload button.\n\n9. Verify that a confirmation prompt appears asking if you want to replace the existing model.\n\n10. Confirm the replacement and wait for the upload to complete.\n\n11. SSH into the host system and check for updated files in /media/models/test_model/:\ndocker exec -it <container_name> ls -l /media/models/test_model/ \n\n12. Confirm that the existing model has been overwritten with the new contents.	GUI opens successfully in the browser.\n\nLogin completes successfully with valid credentials.\n\nModels Page loads correctly.\n\nModel path is correctly set to /media/models/.\n\ntest_model is listed in the models table.\n\nUpload Model dialog opens without issues.\n\ntest_model.zip is selected from the local system.\n\nUpload process is initiated upon clicking the Upload button.\n\nA confirmation prompt appears, asking whether to replace the existing test_model.\n\nUpon confirmation, upload completes successfully and the progress bar shows 100%.\n\nSSH command executes successfully and lists contents of /media/models/test_model/.\n\nFile timestamps or contents indicate that the model has been successfully overwritten with the new files.	\N	PASS	COMPLETED	\N	Models
95	TS_Inference_022	Validating Text-to-Text task type	TC_95	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded	\N	NOT-TESTED	NEW	\N	Inference
66	TS_Models_016	\N	TC_66	Verify that refreshing the GUI during model upload allows resuming the upload process properly.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A large model ZIP file (to ensure noticeable upload time) is ready for testing.\n\n4. Stable network connection.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click Upload Model and select the large ZIP file.\n\n5. Start the upload process.\n\n6. While the upload is in progress, refresh the browser tab.\n\n7. Observe the behavior after the page reloads.\n\n8. Check whether the upload resumes automatically or prompts to resume after the page is refreshed.\n\n9. After upload completion, verify the model appears in the GUI.\n\n10. SSH into the host system to confirm the model is present in the models path:\ndocker exec -it <container_name> ls /media/models/\n	GUI opens in the browser successfully.\n\nLogin is successful using valid credentials.\n\nModels Page loads correctly.\n\nUpload Model button allows selection of a large ZIP file.\n\nUpload process begins, showing progress (e.g., progress bar).\n\nRefreshing the browser tab interrupts the upload process.\n\nAfter reload, the GUI:\n\nDoes not resume the upload automatically.\n\nDoes not prompt to resume the interrupted upload.\n\nUser must restart the upload manually.\n\nOnce the upload completes successfully, the uploaded model is listed in the Models Page.\n\nSSH into the host and run docker exec -it <container_name> ls /media/models/ shows the uploaded model directory is present and accessible.	\N	NOT-TESTED	NEW	\N	Models
67	TS_Models_017	\N	TC_67	Verify that selecting another ZIP file during an ongoing upload is blocked or disabled until the upload completes.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A large model ZIP file (for longer upload duration).\n\n4. Another model ZIP file for testing selection attempt during upload.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click Upload Model and select the large ZIP file.\n\n5. Begin the upload process.\n\n6. During the upload, try to click "Upload" again and select another ZIP file.\n\n7. Observe the behavior:\nThe second file selection should be blocked or disabled.\nNo interference with the current ongoing upload should occur. \n\n8. Wait for the upload to complete and confirm only the first file was processed.\n\n9. Verify the model appears in the GUI and on the host system:\ndocker exec -it <container_name> ls /media/models/	GUI opens successfully in the browser.\n\nLogin is successful with valid credentials.\n\nModels Page loads correctly.\n\nClicking Upload Model allows selecting a large ZIP file.\n\nUpload process begins and shows progress (e.g., progress bar or status).\n\nWhen trying to click "Upload" again and select another file during the current upload:\n\nThe second upload option is disabled or blocked.\n\nThe GUI does not allow starting a new upload while one is in progress.\n\nNo interference with the current upload occurs.\n\nOnce the first upload completes, only the initially selected model is processed and listed.\n\nThe uploaded model is displayed in the GUI list.\n\nSSH verification:\ndocker exec -it <container_name> ls /media/models/\nConfirms the model folder exists, indicating a successful single upload.	\N	NOT-TESTED	NEW	\N	Models
68	TS_Models_018	\N	TC_68	Verify whether the GUI allows uploading multiple model ZIP files at once, and handles them correctly.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. Multiple valid model ZIP files are ready for upload.\n\n4. SSH access to host system to verify uploads.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click Upload Model and try selecting multiple ZIP files at once using Ctrl or Shift key.\n\n5. Observe if the GUI accepts multiple files simultaneously.\n\n6. If accepted, check upload progress for each file.\n\n7. Wait for uploads to complete.\n\n8. Verify all uploaded models appear in the GUI.\n\n9. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/\n\n10. Confirm that all uploaded models exist in the container path.	GUI opens successfully in the browser.\n\nLogin with valid credentials is successful.\n\nModels Page loads as expected.\n\nWhen clicking Upload Model and selecting multiple .zip files using Ctrl or Shift:\nGUI should allow multiple file selection if supported.\n\nIf multiple files are accepted:\nUpload progress is shown individually for each file, or a batch progress indicator appears.\n\nAll uploads complete without error.\n\nUploaded models are all listed in the GUI after completion.\n\nSSH verification:\ndocker exec -it <container_name> ls /media/models/\nConfirms that each uploaded model folder exists inside /media/models/.\n\nDirectory names should match the uploaded .zip contents.	\N	FAIL	NEEDS-RETEST	\N	Models
69	TS_Models_019	\N	TC_69	Verify that uploading the same model ZIP file from multiple GUI tabs in parallel does not cause conflicts or errors.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A valid model ZIP file is ready for upload.\n\n4. SSH access to host system to verify uploads.	1. Open the GUI in two separate browser tabs.\n\n2. Login in both tabs using valid credentials.\n\n3. Navigate to the Models Page in both tabs.\n\n4. In each tab, select the same model ZIP file for upload.\n\n5. Click Upload in both tabs simultaneously or within a short time gap.\n\n6. Monitor both tabs for:\nAny errors or upload failures.\nProper UI handling of the upload process.\n\n7. After uploads complete, verify:\nModel is listed only once in the GUI.\nNo duplicate or corrupted entries.\n\n8. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/\n\n9. Confirm that the model directory exists and is valid (not duplicated or partially written).	1. GUI opens successfully in both browser tabs.\n\n2. Login is successful in both tabs using valid credentials.\n\n3. Models Page loads properly in each tab with all interface elements accessible.\n\n4. When the same .zip model file is selected for upload in both tabs the file is accepted without issue in both sessions.\n\n5. When uploads are initiated simultaneously or close in time:\n-> The GUI handles the uploads gracefully, without freezing or crashing.\n-> No upload errors or conflicts are shown in either tab.\n-> If a file conflict occurs, the system should prevent duplicate entries or show an informative message (e.g., "Model already exists").\n\n6. After uploads complete:\n-> The model appears only once in the GUI list, even if upload was triggered twice.\n-> No duplicate or corrupted model entries are visible.\n\n7. On SSH into the host system and running:\ndocker exec -it <container_name> ls /media/models/\nThe model directory exists and is correctly written.	\N	NOT-TESTED	NEW	\N	Models
96	TS_Inference_023	Validating Text-to-Text task type	TC_96	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed	\N	NOT-TESTED	NEW	\N	Inference
70	TS_Models_020	\N	TC_70	Verify that uploading different model ZIP files in parallel from multiple GUI tabs works successfully without issues.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. At least two valid model ZIP files are ready for upload.\n\n4. SSH access to host system to verify uploads.	1. Open the GUI in two different browser tabs.\n\n2. Login in both tabs using valid credentials.\n\n3. Navigate to the Models Page in both tabs.\n\n4. In Tab 1, select and upload model_1.zip.\n\n5. In Tab 2, select and upload model_2.zip.\n\n6. Trigger the uploads simultaneously or with a short delay.\n\n7. Wait for both uploads to complete.\n\n8. Confirm:\nBoth models are listed in the GUI without error.\nGUI remains responsive during parallel upload.\n\n9. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/ \n\n10. Validate that both model_1 and model_2 directories are present and complete.	1. GUI opens in both tabs without error.\n\n2. Login succeeds in both tabs using valid credentials.\n\n3. Models Page loads properly in both tabs.\n\n4.model_1.zip and model_2.zip are accepted for upload.\n\n5. Simultaneous uploads are handled smoothly; no crashes or UI issues.\n\n6. Both models appear once in the GUI after upload.\n\n7. GUI stays responsive throughout the process.\n\n8. docker exec -it <container_name> ls /media/models/ shows both model_1 and model_2 directories.\n\n9. Directories are complete, with no duplicates or partial files.	\N	NOT-TESTED	NEW	\N	Models
71	TS_Models_021	\N	TC_71	Verify that uploading a large dataset(to datasets page) and a model ZIP file(to models page) in parallel works smoothly without affecting each other.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A large dataset json file is available for upload.\n\n4. A valid model ZIP file is ready for upload.\n\n5. SSH access to host system for verification.	1. Open the GUI in two different browser tabs.\n\n2. Login using valid credentials in both tabs.\n\n3. In Tab 1, navigate to the Datasets Page.\n\n4. In Tab 2, navigate to the Models Page.\n\n5. In Tab 1, select and start uploading the large dataset json file.\n\n6. In Tab 2, select and start uploading the model ZIP file.\n\n7. Let both uploads happen in parallel.\n\n8. Wait for both uploads to complete.\n\n9. Confirm:\nThe dataset appears under the available datasets.\nThe model appears under the available models.\nGUI remains responsive and no errors occur during or after upload.\n\n10. SSH into the host system and verify:\ndocker exec -it <container_name> ls /usr/local/datasets/\ndocker exec -it <container_name> ls /media/models/\n\n11. Ensure both uploads are reflected correctly in their respective locations.	1. GUI opens in both tabs without issues.\n\n2. Login is successful in both tabs.\n\n3. Datasets Page and Models Page load correctly in respective tabs.\n\n4. Both dataset and model files are accepted for upload.\n\n5. Parallel uploads proceed without UI lag or conflict.\n\n6. Uploads complete successfully in both tabs.\n\n7. Dataset appears in Available Datasets; model appears in Available Models.\n\n8. GUI stays responsive; no errors or glitches during or after uploads.\n\n9. SSH check confirms dataset in /usr/local/datasets/, model in /media/models/.\n\n10. Both directories exist and contents are complete.\n	\N	NOT-TESTED	NEW	\N	Models
72	TS_Models_022	\N	TC_72	Cancelling the file upload process during the file upload is in progress.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Models
73	TS_Models_023	\N	TC_73	Verify that storage details are shown correctly when the model path is on \n(a) boot drive,\n (b) external drive, and \n(c) RAID on external drives.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. Model directories must exist in all three locations:\nBoot drive (e.g., /media/models_boot/)\nExternal drive (e.g., /media/models_ext/)\nRAID (e.g., /mnt/raid/models/)\n\n5. Proper permissions are given to allow container access to these paths.	 For each path (boot, external, RAID):\n1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter the corresponding model path in the input field.\n\n5. Click the Search button.\n\n6. Observe the storage details displayed (Total, Used, Free).\n\n7. SSH into the host system and run:\ndocker exec -it <container_name> df -h <model_path>\n\n8. Compare the values in GUI vs. output of the above command to validate accuracy.\n\n9. Repeat for all 3 paths (boot, external, RAID).	1. GUI opens and login succeeds.\n\n2. Models Page loads properly.\n\n3. Model path is accepted in the input field.\n\n4. Clicking Search displays storage details (Total, Used, Free).\n\n5. SSH command returns disk usage for the given path.\n\n6. GUI values match df -h output from container.\n\n7. Validation passes for boot, external, and RAID paths.	\N	NOT-TESTED	NEW	\N	Models
74	TS_Inference_001	Validating Text-to-Text task type	TC_74	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Text-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	\N	NOT-TESTED	NEW	\N	Inference
75	TS_Inference_002	Validating Text-to-Text task type	TC_75	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down	\N	NOT-TESTED	NEW	\N	Inference
76	TS_Inference_003	Validating Text-to-Text task type	TC_76	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
77	TS_Inference_004	Validating Text-to-Text task type	TC_77	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU	\N	NOT-TESTED	NEW	\N	Inference
78	TS_Inference_005	Validating Text-to-Text task type	TC_78	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's	\N	NOT-TESTED	NEW	\N	Inference
79	TS_Inference_006	Validating Text-to-Text task type	TC_79	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
80	TS_Inference_007	Validating Text-to-Text task type	TC_80	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down	\N	NOT-TESTED	NEW	\N	Inference
81	TS_Inference_008	Validating Text-to-Text task type	TC_81	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point	\N	NOT-TESTED	NEW	\N	Inference
82	TS_Inference_009	Validating Text-to-Text task type	TC_82	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)	\N	NOT-TESTED	NEW	\N	Inference
83	TS_Inference_010	Validating Text-to-Text task type	TC_83	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)	\N	NOT-TESTED	NEW	\N	Inference
84	TS_Inference_011	Validating Text-to-Text task type	TC_84	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task\n3. Click on "Text-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0	\N	NOT-TESTED	NEW	\N	Inference
85	TS_Inference_012	Validating Text-to-Text task type	TC_85	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model	\N	NOT-TESTED	NEW	\N	Inference
86	TS_Inference_013	Validating Text-to-Text task type	TC_86	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU	\N	NOT-TESTED	NEW	\N	Inference
87	TS_Inference_014	Validating Text-to-Text task type	TC_87	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path	\N	NOT-TESTED	NEW	\N	Inference
88	TS_Inference_015	Validating Text-to-Text task type	TC_88	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
89	TS_Inference_016	Validating Text-to-Text task type	TC_89	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Leave the input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
90	TS_Inference_017	Validating Text-to-Text task type	TC_90	To verify the functionality of send button without passing any input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in the message field\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please enter the input	\N	NOT-TESTED	NEW	\N	Inference
91	TS_Inference_018	Validating Text-to-Text task type	TC_91	To verify the functionality of send button by passing an input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully (Try with different models)\n3. Enter text input and click "Send" button\n4. Verify model generates corresponding output\nConfirm output is displayed correctly in response area	The input should be passed to the model once the user clicks send button 	\N	NOT-TESTED	NEW	\N	Inference
92	TS_Inference_019	Validating Text-to-Text task type	TC_92	To verify whether the output is being generated for an input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input exceeding the maximum allowed length\n4. Verify input field enforces character limit\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input provided	\N	NOT-TESTED	NEW	\N	Inference
97	TS_Inference_024	Validating Text-to-Text task type	TC_97	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output	\N	NOT-TESTED	NEW	\N	Inference
98	TS_Inference_025	Validating Image-to-Text task type	TC_98	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Image-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	\N	NOT-TESTED	NEW	\N	Inference
99	TS_Inference_026	Validating Image-to-Text task type	TC_99	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down	\N	NOT-TESTED	NEW	\N	Inference
100	TS_Inference_027	Validating Image-to-Text task type	TC_100	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
101	TS_Inference_028	Validating Image-to-Text task type	TC_101	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU	\N	NOT-TESTED	NEW	\N	Inference
102	TS_Inference_029	Validating Image-to-Text task type	TC_102	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's	\N	NOT-TESTED	NEW	\N	Inference
103	TS_Inference_030	Validating Image-to-Text task type	TC_103	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
104	TS_Inference_031	Validating Image-to-Text task type	TC_104	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down	\N	NOT-TESTED	NEW	\N	Inference
105	TS_Inference_032	Validating Image-to-Text task type	TC_105	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point	\N	NOT-TESTED	NEW	\N	Inference
106	TS_Inference_033	Validating Image-to-Text task type	TC_106	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)	\N	NOT-TESTED	NEW	\N	Inference
107	TS_Inference_034	Validating Image-to-Text task type	TC_107	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)	\N	NOT-TESTED	NEW	\N	Inference
108	TS_Inference_035	Validating Image-to-Text task type	TC_108	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task\n3. Click on "Image-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0	\N	NOT-TESTED	NEW	\N	Inference
109	TS_Inference_036	Validating Image-to-Text task type	TC_109	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model	\N	NOT-TESTED	NEW	\N	Inference
110	TS_Inference_037	Validating Image-to-Text task type	TC_110	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU	\N	NOT-TESTED	NEW	\N	Inference
111	TS_Inference_038	Validating Image-to-Text task type	TC_111	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path	\N	NOT-TESTED	NEW	\N	Inference
112	TS_Inference_039	Validating Image-to-Text task type	TC_112	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
113	TS_Inference_040	Validating Image-to-Text task type	TC_113	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3.  Don't Upload input image\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
114	TS_Inference_041	Validating Image-to-Text task type	TC_114	To verify the functionality of send button without passing any input image	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input image	\N	NOT-TESTED	NEW	\N	Inference
115	TS_Inference_042	Validating Image-to-Text task type	TC_115	To verify the functionality of send button by passing an input image	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully (Try with different models)\n3.Upload input image and click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input image should be passed to the model once the user clicks send button 	\N	NOT-TESTED	NEW	\N	Inference
116	TS_Inference_043	Validating Image-to-Text task type	TC_116	To verify whether the output is being generated for an input image provided	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image with more size than  maximum allowed size\n4. Verify image doesn't upload\n5. Confirm error message displays reached the maximum allowed size 	The output should be generated for the input image provided	\N	NOT-TESTED	NEW	\N	Inference
117	TS_Inference_044	Validating Image-to-Text task type	TC_117	To verify the maximum number of input images that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give more than one input image at a time	\N	NOT-TESTED	NEW	\N	Inference
118	TS_Inference_045	Validating Image-to-Text task type	TC_118	To verify wehther the enter key is working to pass input image to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by selecting an input image , the input should be passed to the model	\N	NOT-TESTED	NEW	\N	Inference
119	TS_Inference_046	Validating Image-to-Text task type	TC_119	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded	\N	NOT-TESTED	NEW	\N	Inference
120	TS_Inference_047	Validating Image-to-Text task type	TC_120	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input images\n3. verify all the formats are supported	The model should be automatically unloaded and a fresh page should be displayed	\N	NOT-TESTED	NEW	\N	Inference
121	TS_Inference_048	Validating Image-to-Text task type	TC_121	To verify the format of input images supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The user should be able to give any format of input image	\N	NOT-TESTED	NEW	\N	Inference
122	TS_Inference_049	Validating Image-to-Text task type	TC_122	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output	\N	NOT-TESTED	NEW	\N	Inference
123	TS_Inference_050	Validating Speech-to-Text task type	TC_123	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Speech-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	\N	NOT-TESTED	NEW	\N	Inference
124	TS_Inference_051	Validating Speech-to-Text task type	TC_124	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down	\N	NOT-TESTED	NEW	\N	Inference
125	TS_Inference_052	Validating Speech-to-Text task type	TC_125	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
126	TS_Inference_053	Validating Speech-to-Text task type	TC_126	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU	\N	NOT-TESTED	NEW	\N	Inference
127	TS_Inference_054	Validating Speech-to-Text task type	TC_127	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's	\N	NOT-TESTED	NEW	\N	Inference
128	TS_Inference_055	Validating Speech-to-Text task type	TC_128	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
129	TS_Inference_056	Validating Speech-to-Text task type	TC_129	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down	\N	NOT-TESTED	NEW	\N	Inference
130	TS_Inference_057	Validating Speech-to-Text task type	TC_130	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point	\N	NOT-TESTED	NEW	\N	Inference
131	TS_Inference_058	Validating Speech-to-Text task type	TC_131	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)	\N	NOT-TESTED	NEW	\N	Inference
132	TS_Inference_059	Validating Speech-to-Text task type	TC_132	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)	\N	NOT-TESTED	NEW	\N	Inference
133	TS_Inference_060	Validating Speech-to-Text task type	TC_133	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task\n3. Click on "Speech-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0	\N	NOT-TESTED	NEW	\N	Inference
134	TS_Inference_061	Validating Speech-to-Text task type	TC_134	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model	\N	NOT-TESTED	NEW	\N	Inference
135	TS_Inference_062	Validating Speech-to-Text task type	TC_135	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU	\N	NOT-TESTED	NEW	\N	Inference
136	TS_Inference_063	Validating Speech-to-Text task type	TC_136	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path	\N	NOT-TESTED	NEW	\N	Inference
137	TS_Inference_064	Validating Speech-to-Text task type	TC_137	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
138	TS_Inference_065	Validating Speech-to-Text task type	TC_138	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Don't Upload input audio file\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
139	TS_Inference_066	Validating Speech-to-Text task type	TC_139	To verify the functionality of send button without passing any input audio	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input audio	\N	NOT-TESTED	NEW	\N	Inference
140	TS_Inference_067	Validating Speech-to-Text task type	TC_140	To verify the functionality of send button by passing an input audio	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully (Try with different models)\n3. Upload input audio file and click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input audio should be passed to the model once the user clicks send button 	\N	NOT-TESTED	NEW	\N	Inference
141	TS_Inference_068	Validating Speech-to-Text task type	TC_141	To verify whether the output is being generated for an input audio file	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file exceeding the maximum allowed time limit\n4. Verify upload doesn't succeed\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input audio provided	\N	NOT-TESTED	NEW	\N	Inference
142	TS_Inference_069	Validating Speech-to-Text task type	TC_142	To verify the maximum number of input audio's that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give more than one input audio at a time	\N	NOT-TESTED	NEW	\N	Inference
143	TS_Inference_070	Validating Speech-to-Text task type	TC_143	To verify wehther the enter key is working to pass input image to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input audio, the input should be passed to the model	\N	NOT-TESTED	NEW	\N	Inference
144	TS_Inference_071	Validating Speech-to-Text task type	TC_144	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded	\N	NOT-TESTED	NEW	\N	Inference
145	TS_Inference_072	Validating Speech-to-Text task type	TC_145	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input audio's\n3. verify all the formats are supported	The model should be automatically unloaded and a fresh page should be displayed	\N	NOT-TESTED	NEW	\N	Inference
146	TS_Inference_073	Validating Speech-to-Text task type	TC_146	To verify the format of input audio's supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The user should be able to give any format of input audio	\N	NOT-TESTED	NEW	\N	Inference
147	TS_Inference_074	Validating Speech-to-Text task type	TC_147	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select any Language and Load a Speech-to-Text model successfully\n3. Verify the user can be able to select any language from the dropdown	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output	\N	NOT-TESTED	NEW	\N	Inference
148	TS_Inference_075	Validating Speech-to-Text task type	TC_148	To verify the functionality of language selection dropdown  	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select any Language and Load a Speech-to-Text model successfully\n3. Upload an audio file\n4. Verify the output language against the selected language	The user should be able to select any language from the drop down	\N	NOT-TESTED	NEW	\N	Inference
149	TS_Inference_076	Validating Speech-to-Text task type	TC_149	To verify the selected language against the generated output 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The selected language and  the language of output generated should be same	\N	NOT-TESTED	NEW	\N	Inference
150	TS_Inference_077	Validating Image-to-Image task type	TC_150	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Image-to-Image task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	\N	NOT-TESTED	NEW	\N	Inference
151	TS_Inference_078	Validating Image-to-Image task type	TC_151	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down	\N	NOT-TESTED	NEW	\N	Inference
152	TS_Inference_079	Validating Image-to-Image task type	TC_152	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
153	TS_Inference_080	Validating Image-to-Image task type	TC_153	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU	\N	NOT-TESTED	NEW	\N	Inference
154	TS_Inference_081	Validating Image-to-Image task type	TC_154	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's	\N	NOT-TESTED	NEW	\N	Inference
155	TS_Inference_082	Validating Image-to-Image task type	TC_155	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
156	TS_Inference_083	Validating Image-to-Image task type	TC_156	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down	\N	NOT-TESTED	NEW	\N	Inference
157	TS_Inference_084	Validating Image-to-Image task type	TC_157	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point	\N	NOT-TESTED	NEW	\N	Inference
158	TS_Inference_085	Validating Image-to-Image task type	TC_158	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)	\N	NOT-TESTED	NEW	\N	Inference
159	TS_Inference_086	Validating Image-to-Image task type	TC_159	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)	\N	NOT-TESTED	NEW	\N	Inference
160	TS_Inference_087	Validating Image-to-Image task type	TC_160	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task\n3. Click on "Image-to-Image-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0	\N	NOT-TESTED	NEW	\N	Inference
161	TS_Inference_088	Validating Image-to-Image task type	TC_161	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model	\N	NOT-TESTED	NEW	\N	Inference
162	TS_Inference_089	Validating Image-to-Image task type	TC_162	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU	\N	NOT-TESTED	NEW	\N	Inference
163	TS_Inference_090	Validating Image-to-Image task type	TC_163	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path	\N	NOT-TESTED	NEW	\N	Inference
164	TS_Inference_091	Validating Image-to-Image task type	TC_164	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
165	TS_Inference_092	Validating Image-to-Image task type	TC_165	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3.  Don't Upload input image and leave input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
166	TS_Inference_093	Validating Image-to-Image task type	TC_166	To verify the functionality of send button without passing any input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image and  leave the text input field empty \n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input image	\N	NOT-TESTED	NEW	\N	Inference
167	TS_Inference_094	Validating Image-to-Image task type	TC_167	To verify the functionality of send button by passing an input image and leaving the text input field empty	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully (Try with different models)\n3.Upload input image and enter input text click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input image should be passed to the model and should be able to get ouput also	\N	NOT-TESTED	NEW	\N	Inference
168	TS_Inference_095	Validating Image-to-Image task type	TC_168	To verify the functionality of send button by passing an input image and input text	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image with more size than  maximum allowed size\n4. Verify image doesn't upload\n5. Confirm error message displays reached the maximum allowed size 	The output image should be generated for the provided input image and input text	\N	NOT-TESTED	NEW	\N	Inference
169	TS_Inference_096	Validating Image-to-Image task type	TC_169	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input	\N	NOT-TESTED	NEW	\N	Inference
170	TS_Inference_097	Validating Image-to-Image task type	TC_170	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by selecting an input image, the input image should be passed to the model	\N	NOT-TESTED	NEW	\N	Inference
171	TS_Inference_098	Validating Image-to-Image task type	TC_171	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded	\N	NOT-TESTED	NEW	\N	Inference
172	TS_Inference_099	Validating Image-to-Image task type	TC_172	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed	\N	NOT-TESTED	NEW	\N	Inference
173	TS_Inference_100	Validating Image-to-Image task type	TC_173	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input images\n3. verify all the formats are supported	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output	\N	NOT-TESTED	NEW	\N	Inference
174	TS_Inference_101	Validating Image-to-Image task type	TC_174	To verify the format of input images supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to upload any format of images	\N	NOT-TESTED	NEW	\N	Inference
175	TS_Inference_102	Validating Text-to-Image task type	TC_175	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Text-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	\N	NOT-TESTED	NEW	\N	Inference
176	TS_Inference_103	Validating Text-to-Image task type	TC_176	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down	\N	NOT-TESTED	NEW	\N	Inference
177	TS_Inference_104	Validating Text-to-Image task type	TC_177	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
178	TS_Inference_105	Validating Text-to-Image task type	TC_178	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU	\N	NOT-TESTED	NEW	\N	Inference
179	TS_Inference_106	Validating Text-to-Image task type	TC_179	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's	\N	NOT-TESTED	NEW	\N	Inference
180	TS_Inference_107	Validating Text-to-Image task type	TC_180	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
181	TS_Inference_108	Validating Text-to-Image task type	TC_181	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down	\N	NOT-TESTED	NEW	\N	Inference
182	TS_Inference_109	Validating Text-to-Image task type	TC_182	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point	\N	NOT-TESTED	NEW	\N	Inference
183	TS_Inference_110	Validating Text-to-Image task type	TC_183	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)	\N	NOT-TESTED	NEW	\N	Inference
184	TS_Inference_111	Validating Text-to-Image task type	TC_184	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)	\N	NOT-TESTED	NEW	\N	Inference
185	TS_Inference_112	Validating Text-to-Image task type	TC_185	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task\n3. Click on "Text-to-Image-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0	\N	NOT-TESTED	NEW	\N	Inference
186	TS_Inference_113	Validating Text-to-Image task type	TC_186	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model	\N	NOT-TESTED	NEW	\N	Inference
187	TS_Inference_114	Validating Text-to-Image task type	TC_187	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU	\N	NOT-TESTED	NEW	\N	Inference
188	TS_Inference_115	Validating Text-to-Image task type	TC_188	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path	\N	NOT-TESTED	NEW	\N	Inference
189	TS_Inference_116	Validating Text-to-Image task type	TC_189	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
190	TS_Inference_117	Validating Text-to-Image task type	TC_190	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Leave the input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
191	TS_Inference_118	Validating Text-to-Image task type	TC_191	To verify the functionality of send button without passing any input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Enter text input in the message field\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please enter the input	\N	NOT-TESTED	NEW	\N	Inference
192	TS_Inference_119	Validating Text-to-Image task type	TC_192	To verify the functionality of send button by passing an input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully (Try with different models)\n3. Enter text input and click "Send" button\n4. Verify model generates corresponding output\nConfirm output is displayed correctly in response area	The input should be passed to the model once the user clicks send button 	\N	NOT-TESTED	NEW	\N	Inference
193	TS_Inference_120	Validating Text-to-Image task type	TC_193	To verify whether the output image is being generated for an input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Enter text input exceeding the maximum allowed length\n4. Verify input field enforces character limit\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input provided	\N	NOT-TESTED	NEW	\N	Inference
194	TS_Inference_121	Validating Text-to-Image task type	TC_194	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in message field\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input	\N	NOT-TESTED	NEW	\N	Inference
195	TS_Inference_122	Validating Text-to-Image task type	TC_195	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input to the text box, the input should be passed to the model	\N	NOT-TESTED	NEW	\N	Inference
196	TS_Inference_123	Validating Text-to-Image task type	TC_196	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded	\N	NOT-TESTED	NEW	\N	Inference
197	TS_Inference_124	Validating Text-to-Image task type	TC_197	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed	\N	NOT-TESTED	NEW	\N	Inference
198	TS_Inference_125	Validating Text-to-Image task type	TC_198	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a text-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another text-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output	\N	NOT-TESTED	NEW	\N	Inference
199	TS_Inference_126	Validating concurrency	TC_199	To verify the concurency of text to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a image-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another image-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.	\N	NOT-TESTED	NEW	\N	Inference
200	TS_Inference_127	Validating concurrency	TC_200	To verify the concurency of image to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a speech-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another speech-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.	\N	NOT-TESTED	NEW	\N	Inference
201	TS_Inference_128	Validating concurrency	TC_201	To verify the concurency of speech to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a image-to-image model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another image-to-image model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.	\N	NOT-TESTED	NEW	\N	Inference
202	TS_Inference_129	Validating concurrency	TC_202	To verify the concurency of image to image task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a text-to-image model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another text-to-image model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.	\N	NOT-TESTED	NEW	\N	Inference
203	TS_Inference_130	Validating concurrency	TC_203	To verify the concurency of text to image task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.	\N	NOT-TESTED	NEW	\N	Inference
204	TS_Logs_001	To ensure that the application is accessible and the login page loads correctly.	TC_204	Verify Application URL Accessibility and Port Availability	Check for a stable internet connection	Steps: (GUI)\n1. The system is connected to a stable internet network and check if the required ports are open.\n2. Open the application URL in a supported web browser.(chrome,edge)	"1.The application should be reachable, and no network-related errors should appear.\n"\n2.The login page should load without errors  with specified port 	"1.The application is reachable, and no network-related errors should appear.\n"\n2.The login page is loaded without errors with specified port.	PASS	COMPLETED	\N	logs
205	TS_Logs_002	To ensure all required elements (Email, Password, Eye Icon, Sign In, and Forgot Password) are present.	TC_205	Verify the Presence of Required Elements on the Login Page	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application.\n2.Navigate to the login page.\n3.Check for the presence of the following elements:\n- Email input field\n- Password input field\n- Eye icon (password visibility toggle)\n- Sign In button\n- Forgot Password link	All elements should be visible and correctly labeled.	All elements are visible and correctly labeled.	PASS	COMPLETED	\N	logs
206	TS_Logs_003	To ensure all required elements (Email, Password, Eye Icon, Sign In, and Forgot Password) are present and functional on the login page.	TC_206	Verify Functionality of Login Page Elements	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1.Click on the Email input field and enter a valid email.\n2.Click on the Password input field and enter a valid password.\n3.Click the Eye icon to toggle password visibility.\n4.Click the "Sign In" button after entering credentials.\n5.Click on the "Forgot Password" link.	1.Users should be able to type in both fields.\n2.Clicking the Eye icon should toggle password visibility (masked/unmasked).\n3.The "Sign In" button should be clickable and proceed to authentication.\n4.Clicking "Forgot Password" should give a pop up for password recovery	1.User is able to type in both fields.\n2.Clicking the Eye icon should toggle password visibility (masked/unmasked).\n3.The "Sign In" button is clickable and proceed to authentication.\n4.Clicking "Forgot Password" shows password recovery pop up 	PASS	COMPLETED	\N	logs
207	TS_Logs_004	Verify that the user can successfully log in with the correct email and password.	TC_207	Verify login with valid credentials	1.The application should be accessible, and the login page should be functional.\n2.A valid test account (email & password) should be available.\n3.A stable internet connection and a supported browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Enter a valid email and password. \n3. Click the "Sign In" button.	User should be logged in and redirected to the Dashboard	User is able to logged in and redirected to the Dashboard	PASS	COMPLETED	\N	logs
208	TS_Logs_005	Verify that the system does not allow login with both incorrect email and password	TC_208	Verify login with Invalid Email & Invalid Password	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application.\n 2. Enter an invalid email or password. \n3. Click "Sign In".	"Invalid Credentials" error message should be displayed.	"Invalid Credentials" error message should be displayed.	PASS	COMPLETED	\N	logs
209	TS_Logs_006	Verify that the system does not allow login with empty fields	TC_209	Verify login with empty fields	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Leave the email and password fields blank. \n3. Click "Sign In".	A pop-up msg comes "please fill out this field"	A pop-up msg comes "please fill out this field"	PASS	COMPLETED	\N	logs
210	TS_Logs_007	Verify that the system does not allow login with a valid email but an incorrect password.	TC_210	Verify login with Valid Email & Invalid Password	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3.Enter a valid email (e.g., user@example.com).\n4.Enter an invalid password (e.g., WrongPass123).\n5.Click the Sign In button.	1.An error message should appear: "Incorrect password. Please try again."\n2.The user should not be logged in.	1.An error message should appear: "Incorrect password. Please try again." instead of this invalid credentials is poped up \n2.The user should not be logged in.	PASS	COMPLETED	\N	logs
211	TS_Logs_008	 Verify that the system does not allow login with an incorrect email and a valid password.	TC_211	Verify login with Invalid Email & Valid Password	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3.Enter an invalid email (e.g., wronguser@example.com).\n4.Enter a valid password (e.g., Correct@Pass123).\n5.Click the Sign In button.	1.An error message should appear: "User not found. Please check your email."\n2.The user should not be logged in.	1.An error message should appear: "User not found. Please check your email."instead of this invalid credentials is poped up.\n2.The user should not be logged in.	PASS	COMPLETED	\N	logs
212	TS_Logs_009	Ensure that the password input field masks the entered characters for security.	TC_212	Verify password masking	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3.Click on the password input field.\n4.Type any password (e.g., Test@123).\n5.Observe how the entered password is displayed.\n6.Click on the "Eye" icon to toggle visibility.	"1.The password should be masked as dots or asterisks while typing.\n"\n2.Clicking the "Eye" icon should reveal the password in plain text.\n3.Clicking the "Eye" icon again should re-mask the password.	"1.The password is masked as dots or asterisks while typing.\n"\n2.Clicking the "Eye" icon should reveal the password in plain text.\n3.Clicking the "Eye" icon again should re-mask the password.	PASS	COMPLETED	\N	logs
213	TS_Logs_010	Confirm that users can request a password reset and receive a reset email.	TC_213	Verify "Forgot Password" functionality	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n4. Click "Forgot Password?". \n5. Enter a registered email. \n6. Submit the request.\t	A reset password email should be sent to the user.\t	A reset password email is sent to the user.\t	PASS	COMPLETED	\N	logs
214	TS_Logs_011	 Ensure that inactive users are logged out automatically after a predefined idle period.	TC_214	Verify session timeout	1.The application should be accessible, and the login page should be functional.\n2.A valid test account (email & password) should be available.\n3.A stable internet connection and a supported browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3. Enter a valid email and password. \n4. Click the "Sign In" button.\n5. Login successfully.\n6. Stay inactive for a specified time (e.g., 10 mins).	User should be logged out automatically after session timeout.	User should be logged out automatically after session timeout.	PASS	COMPLETED	\N	logs
215	TS_Logs_012	 Validate that the login page displays correctly across various devices and screen resolutions.	TC_215	Verify UI responsiveness on different screen sizes	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3. Open the login page on desktop, tablet, and mobile resolutions.	UI elements should be properly aligned and readable.	UI elements should be properly aligned and readable.	PASS	COMPLETED	\N	logs
216	TS_Logs_013	Check whether the system treats email input as case-insensitive or case-sensitive during login.	TC_216	Verify login with case-sensitive email	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3. Enter a registered email in a different case (e.g., "USER@EXAMPLE.COM" instead of "user@example.com"). \n4. Enter the correct password and log in.	Login should be successful if the email is case-insensitive.	"The user is redirected back to the login page after logout\t"	PASS	COMPLETED	\N	logs
217	TS_Logs_014	Ensure that security measures like account lockout or CAPTCHA activation trigger after several failed login attempts.	TC_217	Verify login after multiple failed attempts	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3. Enter incorrect credentials multiple times (e.g., 5 times). \n4. Try logging in again.	The system should lock the account temporarily or show a CAPTCHA.	The user is redirected back to the login page after logout	PASS	COMPLETED	\N	logs
218	TS_Logs_015	Confirm that users are redirected to the login page when trying to access a restricted area after logging out.	TC_218	Verify login page redirection after logout	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3. Enter a valid email and password. \n4. Click the "Sign In" button.\n5. Login successfully. \n6. Logout from the dashboard. \n7. Try accessing the dashboard URL directly.	The user should be redirected back to the login page.\t	The user is redirected back to the login page after logout\t	PASS	COMPLETED	\N	logs
219	TS_Logs_016	To verify that only an Admin user can create new users in the system and ensure proper navigation to the "Create User" page.	TC_219	Verify User Creation (Admin Only)	1.The application should be up and running.\n2.The user should have Admin privileges to access the "Create User" option.\n3.A valid admin account should exist in the system.	Steps: (GUI)\n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, the user is redirected to the Dashboard.\n5.On the dashboard, locate the User icon at the top-right corner.\n6.Click on the User icon to open the dropdown menu.\nVerify that the dropdown menu contains the following options:\n-Account Settings\n-Create User\n-Logout\n7.Click on "Create User".\n8.The system navigates to the "User Management - 9.Create User" page.\n10.On the "Create User" page:\n-Enter a Username.\n-Enter a valid Email.\n-Enter and confirm the Password.\n-Select a Role from the dropdown (e.g., Read, Write, Admin).\n11.Click on the "Create User" button.\n12.Verify that a success message appears and the user is added to the system.\n13.Navigate to the "Manage Users" section to confirm the newly created user is listed.	"1.Only Admin users should see the ""Create User"" option.\n"\n"2.After clicking ""Create User,"" the user should be taken to the User Management page.\n"\n"3.A new user should be created successfully with the provided credentials and role.\n"\n4.The newly created user should appear in the "Manage Users" list.	"1.Only Admin users should see the ""Create User"" option.\n"\n"2.After clicking ""Create User,"" the user is taken to the User Management page.\n"\n3.A new user is created successfully with the provided credentials and role.\n4.The newly created user should appear in the "Manage Users" list.	PASS	COMPLETED	\N	logs
220	TS_Logs_017	To verify that a user cannot be created if any of the required fields are left empty and proper validation messages are displayed	TC_220	Verify that the system does not allow user creation with empty fields	1.The application should be up and running.\n2.The user should be logged in with Admin privileges.\n3.The Admin should be on the "User Management - Create User" page.	Steps: (GUI) \n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, navigate to the Dashboard.\n5.Click on the User icon at the top-right corner.\n6.Select "Create User" from the dropdown.\n7.The system navigates to the Create User page.\n8.Click the "Create User" button without filling any fields.\n9.Observe the validation messages.	"1.The system should not allow user creation.\n"\n"2.Each empty field should display an appropriate validation message:\n-Username: ""Please fill this field.""\n-Email: ""Please enter a valid email.""\n-Password: ""Password is required.""\n-Confirm Password: ""Please confirm your password.""\n-Role: ""Please select a role."""	"1.The system should not allow user creation.\n"\n"2.Each empty field is display an appropriate validation message:\n-Username: ""Please fill this field.""\n-Email: ""Please enter a valid email.""\n-Password: ""Password is required.""\n-Confirm Password: ""Please confirm your password.""\n-Role: ""Please select a role."""	PASS	COMPLETED	\N	logs
221	TS_Logs_018	To ensure that the password follows the security guidelines and matches the confirmation password before allowing user creation.	TC_221	Verify that password requirements and matching constraints are enforced	1.The application should be up and running.\n2.The user should be logged in with Admin privileges.\n3.The Admin should be on the "User Management - Create User" page.	Steps: (GUI) \n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, navigate to the Dashboard.\n5.Click on the User icon at the top-right corner.\n6.Select "Create User" from the dropdown.\n7.The system navigates to the Create User page.\n8.Fill in the following details:\n-Username: TestUser\n-Email: testuser@example.com\n-Password: password123 (Invalid: does not start with a capital letter)\n-Confirm Password: password1234 (Does not match)\n-Role: Read\n9.Click the "Create User" button.\n10.Observe the validation messages.	1.The system should not allow user creation.                                                                                                                                   2.The following error messages should appear:\nPassword Requirements Not Met:\n-"Password must start with a capital letter."\n-"Password must be at least 8 characters long."\n-"Password must be alphanumeric."                                                                                                     3.Passwords Do Not Match:\n-"Passwords must be the same."	"1.The system should not allow user creation.\n"\nPassword must be at least 8 characters long, even it is not alpha numeric it is creating the new user\n"3.Passwords Do Not Match:\n-""Passwords must be the same."""	PASS	COMPLETED	\N	logs
222	TS_Logs_019	To verify that only an Admin user can create new users in the system and ensure created user is listed correctly 	TC_222	Verify Manage User 	1.The application should be up and running.\n2.The user should have Admin privileges to access the "Create User" option.\n3.A valid admin account should exist in the system.	Steps: (GUI) \n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, the user is redirected to the Dashboard.\n5.On the dashboard, locate the User icon at the top-right corner.\n6.Click on the User icon to open the dropdown menu.\nVerify that the dropdown menu contains the following options:\n-Account Settings\n-Create User\n-Logout\n7.Click on "Create User".\n8.The system navigates to the "User Management - 9.Create User" page.\n10.After success message appears move to User managment and confirm the newly created user is listed correctly as we created\n11.Try to delete User it should ask for the conformation to delete a user	"1.Newly created user is listed correctly as we have created\n"\n2.While deleting a User it should ask for Conformation	"1.Newly created user is listed correctly as we have created\n"\n2.While deleting a User it should ask for Conformation	PASS	COMPLETED	\N	logs
223	TS_Logs_020	Verify that the error message displayed during user creation (e.g., "Password does not match") disappears when navigating to a different section like "Manage Users".	TC_223	Verify Error Message Disappears on Navigation	1.The application should be up and running.\n2.The user should have Admin privileges to access the "Create User" option.\n3.A valid Admin account should exist in the system.	Steps: (GUI)\n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, navigate to the Dashboard.\n5.Click on the User icon at the top-right corner.\n6.From the dropdown, select "Create User".\n7.Click the "Create User" page:\n-Enter a Username.\n-Enter a valid Email.\n-Enter a Password and a different Confirm Password (mismatch).\n-Select a Role from the dropdown.\n8.Click on the "Create User" button.\n9.Verify that an error message appears: "Password does not match".\n10.Navigate to the "Manage Users" section.\n11.Check if the error message persists or disappears.	1.The error message "Password does not match" should appear on the Create User page.\n2.When navigating to another section (Manage Users), the error message should disappear.	1.The error message "Password does not match" should appear on the Create User page.\n2.When navigating to another section (Manage Users), the error message is disappearing.	PASS	COMPLETED	\N	logs
224	TS_Logs_021	Verify that when an Admin deletes a newly created user while the user is logged in on another tab, the deleted user's session should be handled properly, and the user should not be able to access the application.	TC_224	Verify User Deletion and Session Handling	1.The application should be up and running.\n2.The user should have Admin privileges to access the "Create User" option.\n3.A valid Admin account should exist in the system.\n4.The Admin user should have created a new user successfully.\n5.The newly created user should be logged in using a different browser tab.	Steps: (GUI)\n1.Launch the application and log in with Admin credentials.\n2.Navigate to the "Create User" page.\n3.Create a new user by providing valid credentials and selecting a role.\n4.Verify that the user is successfully created.\n5.Open a new tab and log in using the newly created user's credentials.\n6.In the Admin session (previous tab), navigate to the "Manage Users" section.\n7.Locate the newly created user and delete the account.\n8.Navigate back to the new user's session (second tab).\n9.Check if the page is still accessible or if the session is terminated.	1.After deletion by the Admin, the new user's session should be terminated, and they should be logged out automatically.\n2.If the user tries to perform any action, they should see an error message like "User does not exist" or be redirected to the login page.	The deleted user's session remains active, and the user can still access the application even after deletion.	FAIL	NEEDS-RETEST	\N	logs
225	TS_Logs_022	Trying to Create new user with same username or email id	TC_225	Verify Create user 	1.The application should be up and running.\n2.The user should have Admin privileges to access the "Create User" option.\n3.A valid Admin account should exist in the system.	Steps: (GUI)\n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, navigate to the Dashboard.\n5.Click on the User icon at the top-right corner.\n6.From the dropdown, select "Create User".\n7.Click the "Create User" page:\n-Create a new user with same username or email which is already exist 	Should show the message like "User already exist"	Should show the message like "User already exist"	PASS	COMPLETED	\N	logs
226	TS_Logs_023	Verify that when updating the name in "Account Settings," entering another user's credentials during verification does not update the wrong user's details.	TC_226	Incorrect User Credentials Affecting Account Setting	1.The application should be up and running.\n2.The user should have valid credentials to access the system.\n3.The user should be logged in to their account.\nThe "Account Settings" page should be accessible.\n5.The system should require identity verification before updating personal details.	Steps: (GUI)\n1.Launch the application and log in with valid credentials (User A).\n2.Navigate to the Account Settings page.\n3.Under General Information Settings, modify the New Name field.\n4.Click on Update Name.\n5.A "Verify Your Identity" pop-up appears, prompting for email and password.\n6.Enter credentials of another user (User B) instead of User A.\n7.Click Verify and observe the result.\n8.After verification, check whose name is updated in the system.	If incorrect credentials are entered, the system should display an error message like "Invalid credentials" and not allow the update.\nThe name should be updated only for the user who initiated the change (User A).\nThe system should not update another user's profile (User B).	If incorrect credentials are entered, the system should display an error message like "Invalid credentials" and not allow the update.\nThe name should be updated only for the user who initiated the change (User A).\nThe system should not update another user's profile (User B).	PASS	COMPLETED	\N	logs
227	TS_Logs_024	Check whether eye icon is present in account settings while updating the name	TC_227	Verify Account Settings while updating the name	1.The application should be up and running.\n2.The user should have valid credentials to access the system.\n3.The user should be logged in to their account.\nThe "Account Settings" page should be accessible.\n5.The system should require identity verification before updating personal details.	Steps: (GUI)\n1.Launch the application and log in with valid credentials (User A).\n2.Navigate to the Account Settings page.\n3.Under General Information Settings, modify the New Name field.\n4.Click on Update Name.\n5.A "Verify Your Identity" pop-up appears, prompting for email and password.\n6.Click on the Email input field and enter a valid email.\n7.Click on the Password input field and enter a valid password.\n8.Click the Eye icon to toggle password visibility.	Clicking the "Eye" icon should reveal the password in plain text.	Clicking the "Eye" icon is revealing the password in plain text.	PASS	COMPLETED	\N	logs
228	TS_Logs_025	To verify that the system correctly validates the New Name field in the Account Settings page and prevents users from entering special characters when updating their name.	TC_228	Verify Account Settings while updating the name	1.The application should be up and running.\n2.The user should have valid credentials to access the system.\n3.The user should be logged in to their account.\nThe "Account Settings" page should be accessible.\n5.The system should require identity verification before updating personal details.	Steps: (GUI)\n1.Launch the application and log in with valid credentials (User A).\n2.Navigate to the Account Settings page.\n3.Under General Information Settings, modify the New Name field.\n4. Set new name with special characters \n5.Click on Update Name.	"An error message should be displayed, such as:\n""Invalid characters in name"""\nThe name should not be updated in the account settings.	No error message is displayed. \nThe name is updated in the account settings.	PASS	COMPLETED	\N	logs
229	TS_Logs_026	Verify that the password field in Security Settings:\n-Is masked by default.\n-Has an eye toggle to show/hide the password.\n-Accepts only alphanumeric characters.\n-Ensures the new password and confirm password match before allowing an update	TC_229	 Verify Password Field Functionality in Security Settings	1.The application should be up and running.\n2.The user should be logged in with valid credentials.\n3.The user should navigate to Account Settings > Security Settings.	Steps: (GUI):\n1.Launch the application.\n2.Enter valid user credentials (Email & Password).\n3.Click on the "Login" button.\n4.Navigate to Account Settings from the user profile dropdown.\n5.Click on the "Security" tab.\n6.Locate the Change Password section.\n7.Enter a new password in the New Password field.\n8.Verify the following:\n-The password should be masked by default.\n-An eye toggle should be available to show/hide the password.\n-The system should only allow alphanumeric characters.\n-Enter a different password in the Confirm Password field.\n9.Click on the Update Password button.\n10.Observe the validation messages displayed.	Password should be masked by default.\nEye toggle should show/hide the password.\nOnly alphanumeric passwords should be accepted.\nError message should appear if passwords do not match.	 Password is masked correctly.\nEye toggle is showing/hideing the password.\nOnly alphanumeric passwords should be accepted.\n Error message appears	PASS	COMPLETED	\N	logs
\.


--
-- Name: master_table_s_no_seq1; Type: SEQUENCE SET; Schema: public; Owner: miphi
--

SELECT pg_catalog.setval('public.master_table_s_no_seq1', 229, true);


--
-- Name: master_table master_table_pkey; Type: CONSTRAINT; Schema: public; Owner: miphi
--

ALTER TABLE ONLY public.master_table
    ADD CONSTRAINT master_table_pkey PRIMARY KEY (s_no);


--
-- Name: master_table master_table_testcase_id_key; Type: CONSTRAINT; Schema: public; Owner: miphi
--

ALTER TABLE ONLY public.master_table
    ADD CONSTRAINT master_table_testcase_id_key UNIQUE (testcase_id);


--
-- Name: master_table set_testcase_id; Type: TRIGGER; Schema: public; Owner: miphi
--

CREATE TRIGGER set_testcase_id BEFORE INSERT ON public.master_table FOR EACH ROW WHEN ((new.testcase_id IS NULL)) EXECUTE FUNCTION public.generate_testcase_id();


--
-- PostgreSQL database dump complete
--

